openapi: 3.0.3
info:
  title: Course managaer API
  version: 1.0.0
  description: API for managing courses, users, and grades
paths:
  /api/courses/:
    get:
      operationId: api_courses_list
      description: Allows instructors to create courses; allows everyone to list and
        look for courses
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - Course
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCourseList'
          description: ''
    post:
      operationId: api_courses_create
      description: Allows instructors to create courses; allows everyone to list and
        look for courses
      tags:
      - Course
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Course'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Course'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Course'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Course'
          description: ''
  /api/courses/{id}/:
    get:
      operationId: api_courses_retrieve
      description: Allows instructors to create courses; allows everyone to list and
        look for courses
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this course.
        required: true
      tags:
      - Course
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Course'
          description: ''
  /api/enroll/:
    post:
      operationId: api_enroll_create
      description: Allows students to enroll in a course
      tags:
      - Enrollment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Enrollment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Enrollment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Enrollment'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Enrollment'
          description: ''
  /api/grades/:
    post:
      operationId: api_grades_create
      description: Allows instructors to create a new grade
      tags:
      - Grade
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Grades'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Grades'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Grades'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Grades'
          description: ''
  /api/grades/course/{course_id}/:
    get:
      operationId: api_grades_course_list
      description: Returns a list of grades for a specific course created by the instructor
      parameters:
      - in: path
        name: course_id
        schema:
          type: integer
        required: true
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - Grade
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedGradesList'
          description: ''
  /api/my-courses-enrollments/:
    get:
      operationId: api_my_courses_enrollments_list
      description: Returns a list of enrollments for the courses of the authenticated
        instructor
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - Enrollment
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedEnrollmentList'
          description: ''
  /api/my-enrollments/:
    get:
      operationId: api_my_enrollments_list
      description: Returns a list of enrollments for the authenticated student
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - Enrollment
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedEnrollmentList'
          description: ''
  /api/my-grades/:
    get:
      operationId: api_my_grades_list
      description: Returns a list of grades for the authenticated student
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - Grade
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedGradesList'
          description: ''
  /api/my-user/:
    get:
      operationId: api_my_user_retrieve
      description: Returns the data of the authenticated user
      tags:
      - Users
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/register/:
    post:
      operationId: api_register_create
      description: Register a user with a role
      tags:
      - Users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/schema/:
    get:
      operationId: api_schema_retrieve
      description: |-
        OpenApi3 schema for this API. Format can be selected via content negotiation.

        - YAML: application/vnd.oai.openapi
        - JSON: application/vnd.oai.openapi+json
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - yaml
      - in: query
        name: lang
        schema:
          type: string
          enum:
          - af
          - ar
          - ar-dz
          - ast
          - az
          - be
          - bg
          - bn
          - br
          - bs
          - ca
          - ckb
          - cs
          - cy
          - da
          - de
          - dsb
          - el
          - en
          - en-au
          - en-gb
          - eo
          - es
          - es-ar
          - es-co
          - es-mx
          - es-ni
          - es-ve
          - et
          - eu
          - fa
          - fi
          - fr
          - fy
          - ga
          - gd
          - gl
          - he
          - hi
          - hr
          - hsb
          - hu
          - hy
          - ia
          - id
          - ig
          - io
          - is
          - it
          - ja
          - ka
          - kab
          - kk
          - km
          - kn
          - ko
          - ky
          - lb
          - lt
          - lv
          - mk
          - ml
          - mn
          - mr
          - ms
          - my
          - nb
          - ne
          - nl
          - nn
          - os
          - pa
          - pl
          - pt
          - pt-br
          - ro
          - ru
          - sk
          - sl
          - sq
          - sr
          - sr-latn
          - sv
          - sw
          - ta
          - te
          - tg
          - th
          - tk
          - tr
          - tt
          - udm
          - ug
          - uk
          - ur
          - uz
          - vi
          - zh-hans
          - zh-hant
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.oai.openapi:
              schema:
                type: object
                additionalProperties: {}
            application/yaml:
              schema:
                type: object
                additionalProperties: {}
            application/vnd.oai.openapi+json:
              schema:
                type: object
                additionalProperties: {}
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
  /api/token/:
    post:
      operationId: api_token_create
      description: Obtains a JWT token pair (access and refresh tokens) by providing
        username and password.
      tags:
      - Users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomTokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CustomTokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CustomTokenObtainPair'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomTokenObtainPair'
          description: ''
  /api/users/:
    get:
      operationId: api_users_list
      description: List all users
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - Users
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUserList'
          description: ''
components:
  schemas:
    Course:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
        description:
          type: string
        created_by:
          type: string
          readOnly: true
      required:
      - created_by
      - description
      - id
      - name
    CustomTokenObtainPair:
      type: object
      properties:
        username:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
      required:
      - password
      - username
    Enrollment:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: string
          readOnly: true
        course:
          type: integer
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - course
      - created_at
      - id
      - user
    Grades:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        enrollment:
          type: integer
        created_at:
          type: string
          format: date-time
          readOnly: true
        score:
          type: string
          format: decimal
          pattern: ^-?\d{0,4}(?:\.\d{0,1})?$
        comment:
          type: string
          nullable: true
      required:
      - created_at
      - enrollment
      - id
      - score
    PaginatedCourseList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Course'
    PaginatedEnrollmentList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Enrollment'
    PaginatedGradesList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Grades'
    PaginatedUserList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/User'
    RoleEnum:
      enum:
      - admin
      - student
      - instructor
      type: string
      description: |-
        * `admin` - Admin
        * `student` - Student
        * `instructor` - Instructor
    User:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        password:
          type: string
          writeOnly: true
        role:
          $ref: '#/components/schemas/RoleEnum'
      required:
      - id
      - password
      - role
      - username
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
